{"ast":null,"code":"var _jsxFileName = \"/Users/nhuang/Desktop/AIPR/llm-composition/src/components/OverviewFlow/OverviewFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background, useNodesState, useEdgesState } from 'reactflow';\nimport useWebSocket from 'react-use-websocket';\nimport { nodes as initialNodes, edges as initialEdges } from './initial-elements';\nimport CustomNode from './CustomNode';\nimport 'reactflow/dist/style.css';\nimport './overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst minimapStyle = {\n  height: 120\n};\nconst onInit = reactFlowInstance => console.log('flow loaded:', reactFlowInstance);\nconst OverviewFlow = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n\n  // const initializeSSE = useCallback(() => {\n  //   const sse = new EventSource('http://127.0.0.1:5000/sse');\n  //   sse.onmessage = (event) => {\n  //     const data = JSON.parse(event.data);\n\n  //     if (data.type === 'addEdge') {\n  //       setEdges((eds) => addEdge(data.edge, eds));\n  //     }\n  //   };\n  //   sse.onerror = () => {\n  //     console.error('SSE connection error');\n  //   };\n  //   return () => {\n  //     sse.close();\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const cleanup = initializeSSE();\n  //   return cleanup;\n  // }, [initializeSSE]);\n\n  const {\n    sendMessage,\n    lastMessage,\n    readyState\n  } = useWebSocket('ws://localhost:5000/sse');\n  useEffect(() => {\n    console.log(\"WebSocket readyState:\", readyState); // Add this line to log the WebSocket connection status\n  }, [readyState]);\n  useEffect(() => {\n    if (lastMessage) {\n      const data = JSON.parse(lastMessage.data);\n      console.log('Received data:', data);\n      if (data.type === 'addEdge') {\n        setEdges(eds => addEdge(data.edge, eds));\n      }\n    }\n  }, [lastMessage]);\n\n  // we are using a bit of a shortcut here to adjust the edge type\n  // this could also be done with a custom edge for example\n  const edgesWithUpdatedTypes = edges.map(edge => {\n    if (edge.sourceHandle) {\n      const edgeType = nodes.find(node => node.type === 'custom').data.selects[edge.sourceHandle];\n      edge.type = edgeType;\n    }\n    return edge;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edgesWithUpdatedTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onInit: onInit,\n      fitView: true,\n      attributionPosition: \"top-right\",\n      nodeTypes: nodeTypes,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n        style: minimapStyle,\n        zoomable: true,\n        pannable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(OverviewFlow, \"KWvkHbk8Jvcg5GrL/uNRs4PEfJM=\", false, function () {\n  return [useNodesState, useEdgesState, useWebSocket];\n});\n_c = OverviewFlow;\nexport default OverviewFlow;\nvar _c;\n$RefreshReg$(_c, \"OverviewFlow\");","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","addEdge","MiniMap","Controls","Background","useNodesState","useEdgesState","useWebSocket","nodes","initialNodes","edges","initialEdges","CustomNode","jsxDEV","_jsxDEV","nodeTypes","custom","minimapStyle","height","onInit","reactFlowInstance","console","log","OverviewFlow","_s","setNodes","onNodesChange","setEdges","onEdgesChange","onConnect","params","eds","sendMessage","lastMessage","readyState","data","JSON","parse","type","edge","edgesWithUpdatedTypes","map","sourceHandle","edgeType","find","node","selects","style","width","children","fitView","attributionPosition","zoomable","pannable","fileName","_jsxFileName","lineNumber","columnNumber","color","gap","_c","$RefreshReg$"],"sources":["/Users/nhuang/Desktop/AIPR/llm-composition/src/components/OverviewFlow/OverviewFlow.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport ReactFlow, {\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n} from 'reactflow';\nimport useWebSocket from 'react-use-websocket';\n\n\nimport { nodes as initialNodes, edges as initialEdges } from './initial-elements';\nimport CustomNode from './CustomNode';\n\nimport 'reactflow/dist/style.css';\nimport './overview.css';\n\nconst nodeTypes = {\n  custom: CustomNode,\n};\n\nconst minimapStyle = {\n  height: 120,\n};\n\nconst onInit = (reactFlowInstance) => console.log('flow loaded:', reactFlowInstance);\n\nconst OverviewFlow = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\n\n  // const initializeSSE = useCallback(() => {\n  //   const sse = new EventSource('http://127.0.0.1:5000/sse');\n  //   sse.onmessage = (event) => {\n  //     const data = JSON.parse(event.data);\n  \n  //     if (data.type === 'addEdge') {\n  //       setEdges((eds) => addEdge(data.edge, eds));\n  //     }\n  //   };\n  //   sse.onerror = () => {\n  //     console.error('SSE connection error');\n  //   };\n  //   return () => {\n  //     sse.close();\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const cleanup = initializeSSE();\n  //   return cleanup;\n  // }, [initializeSSE]);\n\n  const { sendMessage, lastMessage, readyState } = useWebSocket('ws://localhost:5000/sse');\n\n  useEffect(() => {\n    console.log(\"WebSocket readyState:\", readyState); // Add this line to log the WebSocket connection status\n  }, [readyState]);\n\n  useEffect(() => {\n    if (lastMessage) {\n      const data = JSON.parse(lastMessage.data);\n      console.log('Received data:', data);\n      if (data.type === 'addEdge') {\n        setEdges((eds) => addEdge(data.edge, eds));\n      }\n    }\n  }, [lastMessage]);\n\n  // we are using a bit of a shortcut here to adjust the edge type\n  // this could also be done with a custom edge for example\n  const edgesWithUpdatedTypes = edges.map((edge) => {\n    if (edge.sourceHandle) {\n      const edgeType = nodes.find((node) => node.type === 'custom').data.selects[edge.sourceHandle];\n      edge.type = edgeType;\n    }\n\n    return edge;\n  });\n\n  return (\n    <div style={{ width: '80vw', height: '100vh' }}>\n        <ReactFlow\n        nodes={nodes}\n        edges={edgesWithUpdatedTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onInit={onInit}\n        fitView\n        attributionPosition=\"top-right\"\n        nodeTypes={nodeTypes}\n        >\n        <MiniMap style={minimapStyle} zoomable pannable />\n        <Controls />\n        <Background color=\"#aaa\" gap={16} />\n        </ReactFlow>\n    </div>\n  );\n};\n\nexport default OverviewFlow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}