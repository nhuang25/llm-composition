{"ast":null,"code":"var _jsxFileName = \"/Users/nhuang/Desktop/AIPR/llm-composition/src/OverviewFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background, useNodesState, useEdgesState } from 'reactflow';\nimport { nodes as initialNodes, edges as initialEdges } from './initial-elements';\nimport CustomNode from './CustomNode';\nimport 'reactflow/dist/style.css';\nimport './overview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  custom: CustomNode\n};\nconst minimapStyle = {\n  height: 120\n};\nconst onInit = reactFlowInstance => console.log('flow loaded:', reactFlowInstance);\nconst OverviewFlow = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n\n  // we are using a bit of a shortcut here to adjust the edge type\n  // this could also be done with a custom edge for example\n  const edgesWithUpdatedTypes = edges.map(edge => {\n    if (edge.sourceHandle) {\n      const edgeType = nodes.find(node => node.type === 'custom').data.selects[edge.sourceHandle];\n      edge.type = edgeType;\n    }\n    return edge;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '90vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edgesWithUpdatedTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onInit: onInit,\n      fitView: true,\n      attributionPosition: \"top-right\",\n      nodeTypes: nodeTypes,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n        style: minimapStyle,\n        zoomable: true,\n        pannable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(OverviewFlow, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = OverviewFlow;\nexport default OverviewFlow;\nvar _c;\n$RefreshReg$(_c, \"OverviewFlow\");","map":{"version":3,"names":["React","useCallback","ReactFlow","addEdge","MiniMap","Controls","Background","useNodesState","useEdgesState","nodes","initialNodes","edges","initialEdges","CustomNode","jsxDEV","_jsxDEV","nodeTypes","custom","minimapStyle","height","onInit","reactFlowInstance","console","log","OverviewFlow","_s","setNodes","onNodesChange","setEdges","onEdgesChange","onConnect","params","eds","edgesWithUpdatedTypes","map","edge","sourceHandle","edgeType","find","node","type","data","selects","style","width","children","fitView","attributionPosition","zoomable","pannable","fileName","_jsxFileName","lineNumber","columnNumber","color","gap","_c","$RefreshReg$"],"sources":["/Users/nhuang/Desktop/AIPR/llm-composition/src/OverviewFlow.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport ReactFlow, {\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n} from 'reactflow';\n\nimport { nodes as initialNodes, edges as initialEdges } from './initial-elements';\nimport CustomNode from './CustomNode';\n\nimport 'reactflow/dist/style.css';\nimport './overview.css';\n\nconst nodeTypes = {\n  custom: CustomNode,\n};\n\nconst minimapStyle = {\n  height: 120,\n};\n\nconst onInit = (reactFlowInstance) => console.log('flow loaded:', reactFlowInstance);\n\nconst OverviewFlow = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\n\n  // we are using a bit of a shortcut here to adjust the edge type\n  // this could also be done with a custom edge for example\n  const edgesWithUpdatedTypes = edges.map((edge) => {\n    if (edge.sourceHandle) {\n      const edgeType = nodes.find((node) => node.type === 'custom').data.selects[edge.sourceHandle];\n      edge.type = edgeType;\n    }\n\n    return edge;\n  });\n\n  return (\n    <div style={{ width: '90vw', height: '100vh' }}>\n        <ReactFlow\n        nodes={nodes}\n        edges={edgesWithUpdatedTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onInit={onInit}\n        fitView\n        attributionPosition=\"top-right\"\n        nodeTypes={nodeTypes}\n        >\n        <MiniMap style={minimapStyle} zoomable pannable />\n        <Controls />\n        <Background color=\"#aaa\" gap={16} />\n        </ReactFlow>\n    </div>\n  );\n};\n\nexport default OverviewFlow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,IACdC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,aAAa,QACR,WAAW;AAElB,SAASC,KAAK,IAAIC,YAAY,EAAEC,KAAK,IAAIC,YAAY,QAAQ,oBAAoB;AACjF,OAAOC,UAAU,MAAM,cAAc;AAErC,OAAO,0BAA0B;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEJ;AACV,CAAC;AAED,MAAMK,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAIC,iBAAiB,IAAKC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,iBAAiB,CAAC;AAEpF,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAAChB,KAAK,EAAEiB,QAAQ,EAAEC,aAAa,CAAC,GAAGpB,aAAa,CAACG,YAAY,CAAC;EACpE,MAAM,CAACC,KAAK,EAAEiB,QAAQ,EAAEC,aAAa,CAAC,GAAGrB,aAAa,CAACI,YAAY,CAAC;EACpE,MAAMkB,SAAS,GAAG7B,WAAW,CAAE8B,MAAM,IAAKH,QAAQ,CAAEI,GAAG,IAAK7B,OAAO,CAAC4B,MAAM,EAAEC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEtF;EACA;EACA,MAAMC,qBAAqB,GAAGtB,KAAK,CAACuB,GAAG,CAAEC,IAAI,IAAK;IAChD,IAAIA,IAAI,CAACC,YAAY,EAAE;MACrB,MAAMC,QAAQ,GAAG5B,KAAK,CAAC6B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,QAAQ,CAAC,CAACC,IAAI,CAACC,OAAO,CAACP,IAAI,CAACC,YAAY,CAAC;MAC7FD,IAAI,CAACK,IAAI,GAAGH,QAAQ;IACtB;IAEA,OAAOF,IAAI;EACb,CAAC,CAAC;EAEF,oBACEpB,OAAA;IAAK4B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEzB,MAAM,EAAE;IAAQ,CAAE;IAAA0B,QAAA,eAC3C9B,OAAA,CAACb,SAAS;MACVO,KAAK,EAAEA,KAAM;MACbE,KAAK,EAAEsB,qBAAsB;MAC7BN,aAAa,EAAEA,aAAc;MAC7BE,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAEA,SAAU;MACrBV,MAAM,EAAEA,MAAO;MACf0B,OAAO;MACPC,mBAAmB,EAAC,WAAW;MAC/B/B,SAAS,EAAEA,SAAU;MAAA6B,QAAA,gBAErB9B,OAAA,CAACX,OAAO;QAACuC,KAAK,EAAEzB,YAAa;QAAC8B,QAAQ;QAACC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDtC,OAAA,CAACV,QAAQ;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZtC,OAAA,CAACT,UAAU;QAACgD,KAAK,EAAC,MAAM;QAACC,GAAG,EAAE;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnCID,YAAY;EAAA,QACyBjB,aAAa,EACbC,aAAa;AAAA;AAAAgD,EAAA,GAFlDhC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}